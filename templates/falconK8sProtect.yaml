AWSTemplateFormatVersion: "2010-09-09"
Description: "Deploy falcon-operator using CloudFormation to existing EKS cluster"

Metadata:
  cfn-lint: { config: { ignore_checks: [W9002, W9003, W9004, W9006, E9007, E9008] } }

Parameters:
  PermissionsBoundary:
    Type: String
    Default: ''
  EksClusterName:
    Type: String
    Default: ''
  EKSClusterArn:
    Type: String
    Description: "ARN of the EKS Cluster"
  EnvAlias:
    Type: String
    Default: ''
  FalconClientID:
    Description: Falcon Client ID
    Type: String
    Default: ''
    NoEcho: true
  FalconClientSecret:
    Description: Falcon Client Secret
    Type: String
    Default: ''
    NoEcho: true
  FalconCID:
    Description: 'Customer CID for the Falcon Installation'
    Type: String
    AllowedPattern: "[a-z0-9-]+"
  DockerAPIToken:
    Description: "Docker API Token generated when registering K8S Cluster in Falcon"
    Type: String
    NoEcho: true
  CrowdStrikeCloud:
    Type: String
    AllowedValues: ['us-1','us-2','eu-1']
    Description: "CrowdStrike Cloud Region"

Conditions:
  PermissionsBoundary: !Not [ !Equals [ !Ref PermissionsBoundary, '' ] ]

Resources:
  InstallK8sProtect:
    Type: "AWSQS::Kubernetes::HelmPov"
    Properties:
      ClusterID: !Ref EksClusterName
      Name: falcon-kubernetes-protection
      Namespace: falcon-kubernetes-protection
      Repository: https://registry.crowdstrike.com/kpagent-helm
      Chart: kpagent-helm/cs-k8s-protection-agent
      ValueYaml: !Sub |
        crowdstrikeConfig:
          clientID: ${FalconClientID}
          clientSecret: ${FalconClientSecret}
          clusterName: ${EKSClusterArn}
          dockerAPIToken: ${DockerAPIToken}
          cid: ${FalconCID}
          env: ${CrowdStrikeCloud}